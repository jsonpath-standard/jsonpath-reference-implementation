selector = ${ SOI ~ rootSelector ~ matchers ~ EOI }

matchers = ${ matcher* }
rootSelector = @{ "$" }

matcher = !{ dotChild | union | descendant }

dotChild = _{ wildcardedDotChild | namedDotChild }
wildcardedDotChild = { ".*" }
namedDotChild = ${ "." ~ childName }
childName = @{ char+ }
char = {
    "-"
    | ASCII_DIGIT
    | ASCII_ALPHA
    | "_"
    | '\u{80}'..'\u{10FFFF}'
}

union =  { "[" ~ unionElement ~ ("," ~ unionElement)* ~ "]" }
unionElement = _{ unionChild | unionArraySlice | unionArrayIndex }
unionChild = ${ doubleQuotedString | singleQuotedString }
unionArrayIndex = @{ integer }
integer = _{ "-" ? ~ ( "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* ) }
unionArraySlice = { sliceStart ? ~ ":" ~ sliceEnd ? ~ ( ":" ~ sliceStep ? ) ? }
sliceStart = @{ integer }
sliceEnd = @{ integer }
sliceStep = @{ integer }

descendant = ${ ".." ~ descendantVariant }
descendantVariant = _{ childName | wildcard |  "[" ~ wildcard ~ "]" | "[" ~ unionElement ~ "]" }
wildcard = { "*" }

doubleQuotedString = _{ "\"" ~ doubleInner ~ "\"" }
doubleInner = @{ doubleChar* }
doubleChar = {
    !("\"" | "\\" | '\u{00}'..'\u{1F}') ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ hexDigit{4})
}
hexDigit = _{ ASCII_DIGIT | "A" | "B" | "C" | "D" | "E" | "F" | "a" | "b" | "c" | "d" | "e" | "f" }

singleQuotedString = _{ "'" ~ singleInner ~ "'" }
singleInner = @{ singleChar* }
singleChar = {
    !("'" | "\\" | '\u{00}'..'\u{1F}') ~ ANY
    | "\\" ~ ("'" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ hexDigit{4})
}

WHITESPACE = _{ " " }